// ASSIGN PARAGRAPH ID'S
$(".Paragraf-1").not(".IgnorePrg").each(function(index) { 
$(this).html("<h3>#" + index + "</h3>" + $(this).html());
	$(this).attr("name", "prg-" + index);
});

// GET PAGE NUMBERS OF FIHRIST ITEMS
$("[name^='fihrist-']").each(function() {
	console.log($(this).parent().prevAll("a.pageNumber").first().text() 
						+ " - " + $(this).text().toUpperCase().trim()  )
})



for( x in document.getElementsByClassName('Alt-Başlık')) {
	var inText = document.getElementsByClassName('Alt-Başlık')[x].innerHTML;
	document.getElementsByClassName('Alt-Başlık')[x].innerHTML = "<a class='fihrist' name='fihrist-" + x + "'>" + inText + "</a>";
}


<hr class="sayfaAralik">


for( x in document.getElementsByClassName('sayfaAralik')) {
	//var inText = document.getElementsByClassName('sayfaAralik')[x].setAttribute("name", "page-" + x);
	//var pageNumHeader = document.createTextNode("#" + x);
	var y = parseInt(x) + 1;
	document.getElementsByClassName('sayfaAralik')[x].insertAdjacentHTML("afterend", "<a class='pageNumber' name='page-" + y + "'>#" + y + "</a>");
}


for( x in document.getElementsByClassName('Alt-Başlık')) {
	console.log(document.getElementsByClassName('Alt-Başlık')[x].innerText);
}

var pageNums = document.getElementsByClassName('pageNumber');
for(var i = 0; i < pageNums.length; i++) {
	console.log(pageNums[i].innerText);
}

//calculate page sizes
var pageTopElements = document.getElementsByClassName("sayfaAralik");
var tmpOffset = pageTopElements[0].offsetTop;
var pageSizes = [];
var pageTops = [pageTopElements[0].offsetTop];
for( var i = 1; i < pageTopElements.length; i++) {
	pageSizes.push(pageTopElements[i].offsetTop - tmpOffset);
	pageTops.push(pageTopElements[i].offsetTop);
	tmpOffset = pageTopElements[i].offsetTop;
}
{pageSizes, pageTops};


//calc page tops
var pageTopElements = document.getElementsByClassName("sayfaAralik");
var pageTops = [pageTopElements[0].offsetTop];
for( var i = 0; i < pageTopElements.length; i++) {
		pageTops.push(pageTopElements[i].offsetTop);
}
pageTops;


// highlight separate paragraphs
var offsets = [];
for( x in document.getElementsByClassName('Paragraf-1')) {
	//var inText = document.getElementsByClassName('sayfaAralik')[x].setAttribute("name", "page-" + x);
	//var pageNumHeader = document.createTextNode("#" + x);
	
	var elm = document.getElementsByClassName('Paragraf-1')[x];
	elm.innerHTML = "<h3>#" + x + "</h3>" + elm.innerHTML;
	elm.setAttribute("name", "prg-" + x);
	offsets.push(document.body.scrollTop + elm.getBoundingClientRect().top);
}


// JQUERY highlight separate paragraphs
var offsets = [];
$(".Paragraf-1").each( function(index) {
	//var inText = document.getElementsByClassName('sayfaAralik')[x].setAttribute("name", "page-" + x);
	//var pageNumHeader = document.createTextNode("#" + x);
	
	$(this).prepend("<h3>#" + index + "</h3>");
	$(this).attr("name", "prg-" + index);
	// $('html, body').animate({ scrollTop: $(".Paragraf-1").eq(index).offset().top}, 1000);
	//offsets.push(document.body.scrollTop + elm.getBoundingClientRect().top);
} );


// get first Paragraf-1 elt in current scroll
function getElementByTopOffset(selector, offsetTop){
    return $(selector).filter(function( index, elem) {
       return $(elem).offset().top >= offsetTop;
    }).first();
}

// get prev pageAralik elt in current scroll
function getPrevElementByTopOffset(selector, offsetTop){
    return $(selector).filter(function( index, elem) {
       return $(elem).offset().top <= offsetTop;
    }).last();
}

getElementByTopOffset(".Paragraf-1", $(window).scrollTop()).attr("name");

//DETECT SCROLL STOPPING
$(window).scroll(function() {
    clearTimeout($.data(this, 'scrollTimer'));
    $.data(this, 'scrollTimer', setTimeout(function() {
        // do something
        alert("Haven't scrolled in 250ms!");
    }, 250));
});

//
window.outerHeight // page height
document.body.scrollHeight // total height
document.body.scrollTop // current scroll offset



// FIND A SPECIFIC WORD AND ENCAPSULATE IT WITHIN A SPAN TAG AND ASSIGN IT AN ID
var word = "god";

function flatten(word) {
	return word.trim().replace("-", ' ').toLowerCase();
}
var search = $( ".Paragraf-1, .Paragraf-2" ).filter( function ()
{
    return flatten($( this ).text()).indexOf( flatten(word) ) >= 0;
}).each(function() {
    var html = $(this).html();
    $(this).html(html.replace(word, "<span class='lugatSpan'>" + word + "</span>")); 
});



// SET SELECTION RANGE
function setSelectionRange(input, start, end) { 
	if (input.setSelectionRange) {
		input.focus();
		input.setSelectionRange(start, end);
	} else if (input.createTextRange) {
		var range = input.createTextRange();
		range.collapse(true);
		range.moveEnd('character', end);
		range.moveStart('character', start);
		range.select();
		return range;
	}
}


//modify selection range
function getSelectionRanges() {
	var selectedWord = window.getSelection().toString();
	window.getSelection().modify("extend", "backward", "sentence");
	var prevPart = window.getSelection().toString();
	window.getSelection().modify("extend", "forward", "sentence");
	var nextPart = window.getSelection().toString();
	return [selectedWord, nextPart, prevPart]
}

function getSelectionRanges() {
                    var selectedWord = window.getSelection().toString();
                    window.getSelection().modify("extend", "backward", "sentence");
                    var prevPart = window.getSelection().toString();
                    window.getSelection().modify("extend", "forward", "sentence");
                    var nextPart = window.getSelection().toString();
                    return [selectedWord, '|', nextPart, '|', prevPart]
                }

$('html, body').animate({ scrollTop: $("p[name='prg-12']" ).offset().top - 15}, 500, function() { console.log("SIDE_TR"); });

"$('html, body').animate({ scrollTop: $(\"p[name='" +
            activeParagraphId + "']\" ).offset().top - 15}, 500);\n" +
            "$(\"p\").removeClass(\"highlighted\");\n" +
            "var currentPrg = $(\"p[name='" + activeParagraphId + "']\"); \n" +
            "currentPrg.addClass(\"highlighted\");" +
            "currentPrg.nextUntil(currentPrg.nextAll(\".Paragraf-1\").first(), \".Paragraf-2\").addClass(\"highlighted\");\n"


/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/// PYTHON SCRIPT FOR GENERATING SEPARATE SECTIONS FROM FULL TEXT ///
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////

boiler1 = """
<html xmlns="http://www.w3.org/1999/xhtml"><head>
    <title>%s</title>
    <link href="../css/idGeneratedStyles.css" rel="stylesheet" type="text/css">
    <script src="../jquery-3.3.1.min.js"></script>
    <meta charset="utf-8">
    <script type="text/javascript">

        var sideLabel = "SIDE_%s";
        var langLabel = "%s";
        var sectionNo = %d;
        var lastSection = %d;

    </script>
    <script src="root.js"></script>


</head>
<body id="Onuncu_So-z_son" xml:lang="en-US">
<div id="container" class="_idGenObjectStyleOverride-1">

<section id="%s">

"""

boiler2 = """
</section>


<a name="bottom"></a>
</div>

</body></html>
"""

# side = "TR"
# lang = "TR"
side = "OTHER"
lang = "ENG"
lastSection = 20
currSection = 0
offset = 10
new_file_path = "/home/burak/AndroidStudioProjects/HTMLReaderPrototype/Application/src/main/assets/hasir/gen/"
page_separator_html = "<hr class=\"sayfaAralik\"><a class=\"pageNumber\" name=\"page-%d\">#%d</a>"
# orig_file_path = "/home/burak/AndroidStudioProjects/HTMLReaderPrototype/Application/src/main/assets/hasir/hasr-TR-tashihli.html"
orig_file_path = "/home/burak/AndroidStudioProjects/HTMLReaderPrototype/Application/src/main/assets/hasir/hasr-ENG-tashihli.html"

with open(orig_file_path, 'r') as orig_file:
    fullhtml = orig_file.read()

    end_page_separator_index = 0 #initilazition

    for currSection in range(0, lastSection + 1):
#     for currSection in range(0, 5):
        filename = "hasr-%s-section-%d.html" % (lang, currSection)

        with open(new_file_path + filename, "w") as new_file:
            new_file.write(boiler1 % (filename, side, lang, currSection, lastSection, filename[:-5]))

            # parse the corresponding portion of html from orig file
            start_page = (currSection * offset) + 1
            end_page = ((currSection + 1) * offset) + 1
            start_page_separator_index = fullhtml.find(page_separator_html % (start_page, start_page), end_page_separator_index)
            end_page_separator_index = fullhtml.find(page_separator_html % (end_page, end_page), start_page_separator_index)
            if(start_page_separator_index != -1 and end_page_separator_index != -1):
                portion_html = fullhtml[start_page_separator_index:end_page_separator_index]
                new_file.write(portion_html)


            new_file.write(boiler2)

/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////